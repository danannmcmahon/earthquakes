{"version":3,"sources":["eqlist/eqdisplay.js","eqlist/eqsearch.js","App.js","reportWebVitals.js","index.js"],"names":["EqDisplay","this","props","earthquakes","features","length","className","map","p","properties","mag","place","geometry","coordinates","toFixed","alert","href","url","target","rel","id","Component","EqSearch","state","value","startdate","enddate","eqs","metadata","count","magop","long","lat","rad","sort","magyn","geo","submitmag","submitgeo","setclass","setclassb","handleSubmit","bind","handleChange","handleMag","handleGeo","handleLoad","event","nam","name","val","setState","checked","console","log","s","axios","get","then","res","data","area","magn","sortby","getEarthquakes","preventDefault","onSubmit","Container","Fluid","Row","type","onChange","disabled","min","max","Table","React","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c45589f9.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nexport class EqDisplay extends Component {\r\n\r\n    render() {\r\n    if (this.props.earthquakes.features == null || this.props.earthquakes.features.length === 0) {\r\n    return <tr><h5 className=\"p-2\">No Results</h5></tr>\r\n    }\r\n    \r\n    return this.props.earthquakes.features.map(p => \r\n    <tr key={p.id}><td>\r\n    { p.properties.mag }\r\n    </td><td>\r\n    { p.properties.place }\r\n    </td><td>\r\n    { p.geometry.coordinates[0].toFixed(2) }\r\n    </td><td>\r\n    { p.geometry.coordinates[1].toFixed(2) }\r\n    </td><td>\r\n    { p.geometry.coordinates[2] }\r\n    </td><td className={'eq'+ p.properties.alert}>\r\n    { p.properties.alert }\r\n    </td><td>\r\n    <a href = {p.properties.url} target=\"_blank\" rel=\"noreferrer\">Alaska Earthquake Centre</a>\r\n    </td></tr>\r\n   \r\n    )\r\n    \r\n    }\r\n}","import React from 'react';\r\nimport { EqDisplay } from './eqdisplay';\r\nimport axios from 'axios';\r\nimport { Container, Row, Table } from 'react-bootstrap';\r\n\r\n\r\n\r\n\r\nexport class EqSearch extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        value: 'https://earthquake.usgs.gov/fdsnws/event/1/query?format=geojson', \r\n        startdate: '', \r\n        enddate: '', \r\n        eqs:  { metadata: {count: 0} },\r\n        magop: 'minmagnitude',\r\n        mag: '0',\r\n        long: '0',\r\n        lat: '0',\r\n        rad: '20000',\r\n        sort: 'magnitude',\r\n        magyn: false,\r\n        geo: false,\r\n        submitmag: 'disabled',\r\n        submitgeo: 'disabled',\r\n        setclass: 'ready',\r\n        setclassb: 'load',\r\n    };\r\n    \r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleMag = this.handleMag.bind(this);\r\n        this.handleGeo = this.handleGeo.bind(this);\r\n        this.handleLoad = this.handleLoad.bind(this);\r\n\r\n      }\r\n\r\n      handleChange(event) {\r\n        let nam = event.target.name;\r\n        let val = event.target.value;\r\n        this.setState({[nam]: val});\r\n      }\r\n\r\n      handleMag(event){\r\n          this.setState({magyn: event.target.checked});\r\n        console.log(this.state.magyn);\r\n          if (this.state.magyn !== true){\r\n            this.setState({submitmag: ''});\r\n          }else{\r\n            this.setState({submitmag: 'disabled'});\r\n          }\r\n      }\r\n\r\n      handleGeo(event){\r\n        this.setState({geo: event.target.checked});\r\n      console.log(this.state.geo);\r\n        if (this.state.geo !== true){\r\n          this.setState({submitgeo: ''});\r\n        }else{\r\n          this.setState({submitgeo: 'disabled'});\r\n        }\r\n    }\r\n    \r\n    handleLoad(){\r\n        if(this.state.setclass === 'ready'){\r\n            this.setState({setclass: 'load'});\r\n            this.setState({setclassb: 'ready'});\r\n        }else{\r\n            this.setState({setclass: 'ready'});\r\n            this.setState({setclassb: 'load'});\r\n        }\r\n    }\r\n\r\n    getEarthquakes(s) {\r\n        // Simple GET request using axios\r\n        axios.get(s)\r\n            .then(res => {\r\n\r\n                const eqs = res.data;\r\n                this.setState({ eqs });              \r\n                this.handleLoad();\r\n    }\r\n    \r\n    )};\r\n\r\n      handleSubmit(event) {\r\n\r\n        if(this.state.startdate >= this.state.enddate || this.state.startdate === \"\"){\r\n            alert(\"Please validate dates.\");\r\n        }else{\r\n        this.handleLoad();\r\n        const area = \"&latitude=\" + this.state.lat + \"&longitude=\" + this.state.long + \"&maxradiuskm=\"+this.state.rad;\r\n        const magn = '&' + this.state.magop + '=' + this.state.mag;\r\n        const sortby = '&orderby=' + this.state.sort;\r\n        var url = 'https://earthquake.usgs.gov/fdsnws/event/1/query?format=geojson&starttime='+ this.state.startdate +'&endtime=' + this.state.enddate + sortby;\r\n        if(this.state.submitmag === ''){\r\n            url += magn;\r\n        }\r\n        if(this.state.submitgeo === ''){\r\n            url += area;\r\n        }\r\n        url+='&limit=20000';\r\n        this.getEarthquakes(url)\r\n        event.preventDefault();\r\n    }\r\n      }\r\n    \r\n      render() {\r\n        return (\r\n            <div>\r\n                <header className=\"App-header\">\r\n                <span className=\"Header-left\">\r\n                    <h3>Earthquake Information</h3>\r\n                    </span>\r\n            <div className=\"Header-right\">\r\n          <form onSubmit={this.handleSubmit}>\r\n              <Container Fluid className=\"MenuBody\">\r\n              <Row>\r\n                \r\n            <label className=\"col-sm\">\r\n                <div className=\"catHead\">Dates:</div>\r\n                From:<input type=\"date\" name=\"startdate\" value={this.state.startdate} onChange={this.handleChange} /><br/>\r\n                To:<input type=\"date\" name=\"enddate\" value={this.state.enddate} onChange={this.handleChange} />\r\n            </label>\r\n            \r\n            <label className=\"col-sm\">\r\n            <div className=\"catHead\">Magnitude: <input type=\"checkbox\" name=\"magyn\" value={this.state.magyn} onChange={this.handleMag}/></div>\r\n                <select value={this.state.magop} name=\"magop\" disabled={this.state.submitmag} onChange={this.handleChange}><option value=\"minmagnitude\">Greater Than</option><option value=\"maxmagnitude\">Less Than</option></select><br/>\r\n                <input type=\"number\" min=\"-2\" max=\"10\" name=\"mag\" disabled={this.state.submitmag} value={this.state.mag} onChange={this.handleChange} />\r\n            </label>\r\n            \r\n            <label className=\"col-sm\">\r\n            <div className=\"catHead\">Geometrics: <input type=\"checkbox\" name=\"geo\" value={this.state.geo} onChange={this.handleGeo}/></div>\r\n                Longitude:<input type=\"number\" min=\"-180\" max=\"180\" name=\"long\" disabled={this.state.submitgeo} value={this.state.long} onChange={this.handleChange} /><br/>\r\n                Latitude:<input type=\"number\" min=\"-90\" max=\"90\" name=\"lat\" disabled={this.state.submitgeo} value={this.state.lat} onChange={this.handleChange} /><br/>\r\n                Radius (km):<input type=\"number\" min=\"0\" max=\"20001\" name=\"rad\" disabled={this.state.submitgeo} value={this.state.rad} onChange={this.handleChange} />\r\n            </label>\r\n            \r\n            <label className=\"col-sm\">\r\n            <div className=\"catHead\">Sort By:</div>\r\n                <select value={this.state.sort} name=\"sort\" onChange={this.handleChange}>\r\n                    <option value=\"magnitude-asc\">Magnitude ASC</option>\r\n                    <option value=\"magnitude\">Magnitude DESC</option>\r\n                    <option value=\"time-asc\">Time ASC</option>\r\n                    <option value=\"time\">Time DESC</option>\r\n                </select>\r\n            </label>\r\n            <br/>\r\n            \r\n            </Row>\r\n            <Row>\r\n            <input className=\"myButton\" type=\"submit\" value=\"Search\" />\r\n            </Row>\r\n            </Container>\r\n          </form>\r\n          </div>\r\n          </header>\r\n          <Container name=\"results\" className=\"results\">\r\n            <p className={this.state.setclassb}>Loading...</p>\r\n          <p className={this.state.setclass}>Number of Results: {this.state.eqs.metadata.count}</p>\r\n          <Table className=\"tablebody tableresponsive\"><tr className=\"tableHead\"><th>Magnitude</th><th>Location</th><th>Longitude</th><th>Latitude</th><th>Depth (km)</th><th>Alert</th><th>More Information</th></tr>\r\n          <EqDisplay earthquakes ={this.state.eqs}></EqDisplay>\r\n          </Table>\r\n          </Container>\r\n          </div>\r\n        );\r\n      }\r\n\r\n      \r\n}\r\n","import './App.css';\nimport {EqSearch} from './eqlist/eqsearch';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <EqSearch />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}